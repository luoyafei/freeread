<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cui.shibing.freeread.dao.NovelHeadMapper">

  <resultMap id="BaseResultMap" type="cui.shibing.freeread.model.NovelHead">
    <id column="novel_id" jdbcType="INTEGER" property="novelId" />
    <result column="novel_name" jdbcType="VARCHAR" property="novelName" />
    <result column="novel_picture" jdbcType="VARCHAR" property="novelPicture" />
    <result column="novel_content_table_name" jdbcType="VARCHAR" property="novelContentTableName" />
    <result column="novel_content_id" jdbcType="INTEGER" property="novelContentId" />
    <result column="novel_class" jdbcType="VARCHAR" property="novelClass" />
    <result column="novel_status" jdbcType="INTEGER" property="novelStatus" />
    <result column="novel_chapter_num" jdbcType="INTEGER" property="novelChapterNum" />
    <result column="novel_author" jdbcType="INTEGER" property="novelAuthor" />
    <result column="novel_access" jdbcType="INTEGER" property="novelAccess" />
    <result column="novel_popularity" jdbcType="INTEGER" property="novelPopularity" />
  </resultMap>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    novel_id, novel_name, novel_picture, novel_content_table_name, novel_content_id, 
    novel_class, novel_status, novel_chapter_num, novel_author, novel_access, novel_popularity
    from novel_head
    where novel_id = #{novelId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from novel_head
    where novel_id = #{novelId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="cui.shibing.freeread.model.NovelHead">
    insert into novel_head (novel_id, novel_name, novel_picture, 
      novel_content_table_name, novel_content_id, 
      novel_class, novel_status, novel_chapter_num, 
      novel_author, novel_access, novel_popularity
      )
    values (#{novelId,jdbcType=INTEGER}, #{novelName,jdbcType=VARCHAR}, #{novelPicture,jdbcType=VARCHAR}, 
      #{novelContentTableName,jdbcType=VARCHAR}, #{novelContentId,jdbcType=INTEGER}, 
      #{novelClass,jdbcType=VARCHAR}, #{novelStatus,jdbcType=INTEGER}, #{novelChapterNum,jdbcType=INTEGER}, 
      #{novelAuthor,jdbcType=INTEGER}, #{novelAccess,jdbcType=INTEGER}, #{novelPopularity,jdbcType=INTEGER}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="cui.shibing.freeread.model.NovelHead">
    insert into novel_head
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="novelId != null">
        novel_id,
      </if>
      <if test="novelName != null">
        novel_name,
      </if>
      <if test="novelPicture != null">
        novel_picture,
      </if>
      <if test="novelContentTableName != null">
        novel_content_table_name,
      </if>
      <if test="novelContentId != null">
        novel_content_id,
      </if>
      <if test="novelClass != null">
        novel_class,
      </if>
      <if test="novelStatus != null">
        novel_status,
      </if>
      <if test="novelChapterNum != null">
        novel_chapter_num,
      </if>
      <if test="novelAuthor != null">
        novel_author,
      </if>
      <if test="novelAccess != null">
        novel_access,
      </if>
      <if test="novelPopularity != null">
        novel_popularity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="novelId != null">
        #{novelId,jdbcType=INTEGER},
      </if>
      <if test="novelName != null">
        #{novelName,jdbcType=VARCHAR},
      </if>
      <if test="novelPicture != null">
        #{novelPicture,jdbcType=VARCHAR},
      </if>
      <if test="novelContentTableName != null">
        #{novelContentTableName,jdbcType=VARCHAR},
      </if>
      <if test="novelContentId != null">
        #{novelContentId,jdbcType=INTEGER},
      </if>
      <if test="novelClass != null">
        #{novelClass,jdbcType=VARCHAR},
      </if>
      <if test="novelStatus != null">
        #{novelStatus,jdbcType=INTEGER},
      </if>
      <if test="novelChapterNum != null">
        #{novelChapterNum,jdbcType=INTEGER},
      </if>
      <if test="novelAuthor != null">
        #{novelAuthor,jdbcType=INTEGER},
      </if>
      <if test="novelAccess != null">
        #{novelAccess,jdbcType=INTEGER},
      </if>
      <if test="novelPopularity != null">
        #{novelPopularity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="cui.shibing.freeread.model.NovelHead">
    update novel_head
    <set>
      <if test="novelName != null">
        novel_name = #{novelName,jdbcType=VARCHAR},
      </if>
      <if test="novelPicture != null">
        novel_picture = #{novelPicture,jdbcType=VARCHAR},
      </if>
      <if test="novelContentTableName != null">
        novel_content_table_name = #{novelContentTableName,jdbcType=VARCHAR},
      </if>
      <if test="novelContentId != null">
        novel_content_id = #{novelContentId,jdbcType=INTEGER},
      </if>
      <if test="novelClass != null">
        novel_class = #{novelClass,jdbcType=VARCHAR},
      </if>
      <if test="novelStatus != null">
        novel_status = #{novelStatus,jdbcType=INTEGER},
      </if>
      <if test="novelChapterNum != null">
        novel_chapter_num = #{novelChapterNum,jdbcType=INTEGER},
      </if>
      <if test="novelAuthor != null">
        novel_author = #{novelAuthor,jdbcType=INTEGER},
      </if>
      <if test="novelAccess != null">
        novel_access = #{novelAccess,jdbcType=INTEGER},
      </if>
      <if test="novelPopularity != null">
        novel_popularity = #{novelPopularity,jdbcType=INTEGER},
      </if>
    </set>
    where novel_id = #{novelId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cui.shibing.freeread.model.NovelHead">
    update novel_head
    set novel_name = #{novelName,jdbcType=VARCHAR},
      novel_picture = #{novelPicture,jdbcType=VARCHAR},
      novel_content_table_name = #{novelContentTableName,jdbcType=VARCHAR},
      novel_content_id = #{novelContentId,jdbcType=INTEGER},
      novel_class = #{novelClass,jdbcType=VARCHAR},
      novel_status = #{novelStatus,jdbcType=INTEGER},
      novel_chapter_num = #{novelChapterNum,jdbcType=INTEGER},
      novel_author = #{novelAuthor,jdbcType=INTEGER},
      novel_access = #{novelAccess,jdbcType=INTEGER},
      novel_popularity = #{novelPopularity,jdbcType=INTEGER}
    where novel_id = #{novelId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByNovelName" resultMap="BaseResultMap">
  	select
  	novel_id, novel_name, novel_picture, novel_content_table_name, novel_content_id, 
    novel_class, novel_status, novel_chapter_num, novel_author, novel_access, novel_popularity
  	from novel_head
  	where novel_name = #{novelName} limit #{pageable.offset},#{pageable.pageSize}
  </select>
  
  <select id="selectByNovelClass"  resultMap="BaseResultMap">
  	select
  	novel_id, novel_name, novel_picture, novel_content_table_name, novel_content_id, 
    novel_class, novel_status, novel_chapter_num, novel_author, novel_access, novel_popularity
  	from novel_head
  	where novel_class = #{novelClassName} limit #{pageable.offset},#{pageable.pageSize}
  </select>
  
  <select id="selectByPopularity"  resultMap="BaseResultMap">
  	select
  	novel_id, novel_name, novel_picture, novel_content_table_name, novel_content_id, 
    novel_class, novel_status, novel_chapter_num, novel_author, novel_access, novel_popularity
  	from novel_head
  	order by novel_popularity desc limit #{pageable.offset},#{pageable.pageSize}
  </select>
  
</mapper>